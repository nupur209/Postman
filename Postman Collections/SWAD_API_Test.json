{
  "variables": [],
  "info": {
    "name": "SWAD_API_Test",
    "_postman_id": "4180b815-67f3-bbdf-16f4-34e53af7cc10",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "9a63fba8-b8cd-450d-42ec-ad39a90168f1",
      "name": "1_RegisterUser",
      "description": "",
      "item": [
        {
          "_postman_id": "161893cd-f210-a487-7d28-b8fd618a10f3",
          "name": "RegisterUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  " ",
                  "var data = JSON.parse(responseBody);",
                  "var user_ids=data.user.userid",
                  "console.log(\"User ID  is----\"+user_ids);",
                  "postman.setGlobalVariable(\"UserID\", user_ids);",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "// Assertion to check the response value",
                  " var jsonData = pm.response.json();",
                  "pm.test(\"UserId Should be-----\"+jsonData.user.userid, function () {",
                  "    pm.expect(jsonData.user.userid).to.eql(jsonData.user.userid);",
                  "});",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"awb\", text);\r",
                  "console.log(text);\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/user",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstname\": \"{{firstname}}\",\r\n  \"lastname\": \"{{lastname}}\",\r\n  \"userid\": \"varunk\",\r\n  \"password\": \"123456\",\r\n  \"dateofbirth\": \"18121977\",\r\n  \"maritalstatus\": \"M\",\r\n  \"anniversary\": \"12122007\",\r\n  \"children\": \"1\",\r\n  \"addresses\": {\r\n    \"office\": {\r\n      \"oarea\": \"Noida\",\r\n      \"ocity\": \"Noida\",\r\n      \"ostate\": \"UP\",\r\n      \"ocountry\": \"India\",\r\n      \"opin\": \"201306\"\r\n    },\r\n    \"home\": {\r\n      \"harea\": \"249B Super MIG\",\r\n      \"hcity\": \"Noida\",\r\n      \"hstate\": \"UP\",\r\n      \"hcountry\": \"India\",\r\n      \"hpin\": \"201306\"\r\n    }\r\n  },\r\n  \"preferences\": {\r\n    \"areas\": [\r\n      {\r\n        \"area\": \"Noida\"\r\n      }\r\n    ],\r\n    \"cusienes\": [\r\n      {\r\n        \"cusiene\": \"Bengali\"\r\n      }\r\n    ],\r\n    \"ambiences\": [\r\n      {\r\n        \"ambience\": \"Good\"\r\n      }\r\n    ]\r\n  },\r\n  \"email\": \"varunkumarpce{{awb}}@gmail.com\",\r\n  \"phone\":  \"8130327785\",\r\n  \"creation_date\": \"18082017\",\r\n  \"updated_date\": \"01/09/2017\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7d3a0f86-b297-1734-78c5-1245567d8c41",
          "name": "RegisterUser_WithoutPassword",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Registration User without Password--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"User validation failed: password: Path `password` is required.\");",
                  "});",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"awb\", text);\r",
                  "console.log(text);\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/user",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstname\": \"{{firstname}}\",\r\n  \"lastname\": \"{{lastname}}\",\r\n  \"userid\": \"varunk\",\r\n  \"password\": \"\",\r\n  \"dateofbirth\": \"18121977\",\r\n  \"maritalstatus\": \"M\",\r\n  \"anniversary\": \"12122007\",\r\n  \"children\": \"1\",\r\n  \"addresses\": {\r\n    \"office\": {\r\n      \"oarea\": \"Noida\",\r\n      \"ocity\": \"Noida\",\r\n      \"ostate\": \"UP\",\r\n      \"ocountry\": \"India\",\r\n      \"opin\": \"201306\"\r\n    },\r\n    \"home\": {\r\n      \"harea\": \"249B Super MIG\",\r\n      \"hcity\": \"Noida\",\r\n      \"hstate\": \"UP\",\r\n      \"hcountry\": \"India\",\r\n      \"hpin\": \"201306\"\r\n    }\r\n  },\r\n  \"preferences\": {\r\n    \"areas\": [\r\n      {\r\n        \"area\": \"Noida\"\r\n      }\r\n    ],\r\n    \"cusienes\": [\r\n      {\r\n        \"cusiene\": \"Bengali\"\r\n      }\r\n    ],\r\n    \"ambiences\": [\r\n      {\r\n        \"ambience\": \"Good\"\r\n      }\r\n    ]\r\n  },\r\n  \"email\": \"varunkumarpce{{awb}}@gmail.com\",\r\n  \"phone\":  \"8130327785\",\r\n  \"creation_date\": \"18082017\",\r\n  \"updated_date\": \"01/09/2017\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3c0bb24d-60d1-9a11-499d-e045baf2eb20",
          "name": "RegisterUsername_WithoutFirstName",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Registration User without First name--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"User validation failed: firstname: Path `firstname` is required.\");",
                  "});",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"awb\", text);\r",
                  "console.log(text);\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/user",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstname\": \"\",\r\n  \"lastname\": \"{{lastname}}\",\r\n  \"userid\": \"varunk\",\r\n  \"password\": \"123456\",\r\n  \"dateofbirth\": \"18121977\",\r\n  \"maritalstatus\": \"M\",\r\n  \"anniversary\": \"12122007\",\r\n  \"children\": \"1\",\r\n  \"addresses\": {\r\n    \"office\": {\r\n      \"oarea\": \"Noida\",\r\n      \"ocity\": \"Noida\",\r\n      \"ostate\": \"UP\",\r\n      \"ocountry\": \"India\",\r\n      \"opin\": \"201306\"\r\n    },\r\n    \"home\": {\r\n      \"harea\": \"249B Super MIG\",\r\n      \"hcity\": \"Noida\",\r\n      \"hstate\": \"UP\",\r\n      \"hcountry\": \"India\",\r\n      \"hpin\": \"201306\"\r\n    }\r\n  },\r\n  \"preferences\": {\r\n    \"areas\": [\r\n      {\r\n        \"area\": \"Noida\"\r\n      }\r\n    ],\r\n    \"cusienes\": [\r\n      {\r\n        \"cusiene\": \"Bengali\"\r\n      }\r\n    ],\r\n    \"ambiences\": [\r\n      {\r\n        \"ambience\": \"Good\"\r\n      }\r\n    ]\r\n  },\r\n  \"email\": \"varunkumarpce{{awb}}@gmail.com\",\r\n  \"phone\":  \"8130327785\",\r\n  \"creation_date\": \"18082017\",\r\n  \"updated_date\": \"01/09/2017\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a22fcc0e-439a-52ab-cdc0-e080fd8b03f1",
          "name": "RegisterUsername_WithoutEmail",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Registration User without Email Id--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"User validation failed: email: Path `email` is required.\");",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"awb\", text);\r",
                  "console.log(text);\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/user",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstname\": \"{{firstname}}\",\r\n  \"lastname\": \"{{lastname}}\",\r\n  \"userid\": \"varunk\",\r\n  \"password\": \"123456\",\r\n  \"dateofbirth\": \"18121977\",\r\n  \"maritalstatus\": \"M\",\r\n  \"anniversary\": \"12122007\",\r\n  \"children\": \"1\",\r\n  \"addresses\": {\r\n    \"office\": {\r\n      \"oarea\": \"Noida\",\r\n      \"ocity\": \"Noida\",\r\n      \"ostate\": \"UP\",\r\n      \"ocountry\": \"India\",\r\n      \"opin\": \"201306\"\r\n    },\r\n    \"home\": {\r\n      \"harea\": \"249B Super MIG\",\r\n      \"hcity\": \"Noida\",\r\n      \"hstate\": \"UP\",\r\n      \"hcountry\": \"India\",\r\n      \"hpin\": \"201306\"\r\n    }\r\n  },\r\n  \"preferences\": {\r\n    \"areas\": [\r\n      {\r\n        \"area\": \"Noida\"\r\n      }\r\n    ],\r\n    \"cusienes\": [\r\n      {\r\n        \"cusiene\": \"Bengali\"\r\n      }\r\n    ],\r\n    \"ambiences\": [\r\n      {\r\n        \"ambience\": \"Good\"\r\n      }\r\n    ]\r\n  },\r\n  \"email\": \"\",\r\n  \"phone\":  \"8130327785\",\r\n  \"creation_date\": \"18082017\",\r\n  \"updated_date\": \"01/09/2017\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6c396b8f-a433-2c96-3cef-55648fa4338f",
          "name": "RegisterUsername_WithoutLastName",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Registration User without Last Name--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"User validation failed: lastname: Path `lastname` is required.\");",
                  "});",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"awb\", text);\r",
                  "console.log(text);\r",
                  "\r",
                  "\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/user",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstname\": \"{{firstname}}\",\r\n  \"lastname\": \"\",\r\n  \"userid\": \"varunk\",\r\n  \"password\": \"123456\",\r\n  \"dateofbirth\": \"18121977\",\r\n  \"maritalstatus\": \"M\",\r\n  \"anniversary\": \"12122007\",\r\n  \"children\": \"1\",\r\n  \"addresses\": {\r\n    \"office\": {\r\n      \"oarea\": \"Noida\",\r\n      \"ocity\": \"Noida\",\r\n      \"ostate\": \"UP\",\r\n      \"ocountry\": \"India\",\r\n      \"opin\": \"201306\"\r\n    },\r\n    \"home\": {\r\n      \"harea\": \"249B Super MIG\",\r\n      \"hcity\": \"Noida\",\r\n      \"hstate\": \"UP\",\r\n      \"hcountry\": \"India\",\r\n      \"hpin\": \"201306\"\r\n    }\r\n  },\r\n  \"preferences\": {\r\n    \"areas\": [\r\n      {\r\n        \"area\": \"Noida\"\r\n      }\r\n    ],\r\n    \"cusienes\": [\r\n      {\r\n        \"cusiene\": \"Bengali\"\r\n      }\r\n    ],\r\n    \"ambiences\": [\r\n      {\r\n        \"ambience\": \"Good\"\r\n      }\r\n    ]\r\n  },\r\n  \"email\": \"varunkumarpce{{awb}}@gmail.com\",\r\n  \"phone\":  \"8130327785\",\r\n  \"creation_date\": \"18082017\",\r\n  \"updated_date\": \"01/09/2017\"\r\n}\r\n"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "629fa4c5-48f9-14bd-b8cf-e32aedb1dc48",
      "name": "2_Login",
      "description": "",
      "item": [
        {
          "_postman_id": "ee7f8ed9-6514-a4d2-54bf-b1990f489bd2",
          "name": "Login with valid credential",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var data = JSON.parse(responseBody);",
                  "var token_key=data.token",
                  "postman.setGlobalVariable(\"Token_Key\", token_key);",
                  "console.log(token_key);",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Firstname is Present\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"firstname\");",
                  "});",
                  "pm.test(\"Last name is Present\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"lastname\");",
                  "});",
                  "pm.test(\"User ID is Present\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"userid\");",
                  "});",
                  "",
                  "  var jsonData = pm.response.json();",
                  "pm.test(\"UserId Should be-----\"+jsonData.user.userid, function () {",
                  "    pm.expect(jsonData.user.userid).to.eql(jsonData.user.userid);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"{{UserID}}\",\r\n  \"password\": \"123456\",\r\n  \"usertype\": \"user\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        },
        {
          "_postman_id": "16fde941-0665-4c7e-8c25-12051153e5f1",
          "name": "Login_WithoutUserId",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Login  without UserID --\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"UserID cannot be empty.\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"\",\r\n  \"password\": \"123456\",\r\n  \"usertype\": \"user\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        },
        {
          "_postman_id": "d7770322-7cc1-f06c-7109-42b040e6208b",
          "name": "Login_WithoutPassword",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Login  without Password --\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"Password cannot be empty.\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"{{UserID}}\",\r\n  \"password\": \"\",\r\n  \"usertype\": \"user\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        },
        {
          "_postman_id": "baf2d377-c92b-fa29-5e23-41ec55cafc93",
          "name": "Login_WithoutUserType",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Login  without UserType --\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"UserType cannot be empty.\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"{{UserID}}\",\r\n  \"password\": \"123456\",\r\n  \"usertype\": \"\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        },
        {
          "_postman_id": "5f9e1f45-7b4c-cdf3-f645-c6ddc7738bd7",
          "name": "Login_WithInvalidUserId",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Login with invalid UserID --\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"The Userid that you have entered doesnt match.\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"Varun@gmail.com\",\r\n  \"password\": \"123456\",\r\n  \"usertype\": \"user\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        },
        {
          "_postman_id": "5961553c-dfb1-f94e-503c-d29bb3176707",
          "name": "Login_WithInvalidPassword",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Login with Invalid Password --\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"The password that you have entered is incorrect.\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"{{UserID}}\",\r\n  \"password\": \"2324345\",\r\n  \"usertype\": \"user\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "d25291a1-5e33-3c83-0c88-f924cb1e4544",
      "name": "3_GetUser",
      "description": "",
      "item": [
        {
          "_postman_id": "f5b007d6-ea3b-fcc0-bcaa-458dec187292",
          "name": "GetUser_WithValidUserID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/user/{{UserID}}",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              },
              {
                "key": "",
                "value": "",
                "description": "",
                "disabled": true
              }
            ],
            "body": {},
            "description": "API is used for get user"
          },
          "response": []
        },
        {
          "_postman_id": "36b3f1d9-1a91-273f-a871-e41363f891b9",
          "name": "GetUser_WithInvalidUserID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/user/XER001@gmail.com",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              },
              {
                "key": "",
                "value": "",
                "description": "",
                "disabled": true
              }
            ],
            "body": {},
            "description": "API is used for get user"
          },
          "response": []
        },
        {
          "_postman_id": "4b87bf87-e914-e6dd-60f9-e37247273d44",
          "name": "GetUser_WithoutToken",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.155:5000/api/user/{{UserID}}",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": "",
                "disabled": true
              },
              {
                "key": "",
                "value": "",
                "description": "",
                "disabled": true
              }
            ],
            "body": {},
            "description": "API is used for get user"
          },
          "response": []
        },
        {
          "_postman_id": "53fe6d27-6bd9-d04c-bc04-f6c6f4062140",
          "name": "GetAllUsers",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/user",
            "method": "GET",
            "header": [],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "20c09671-2f04-55c2-f420-e1fc99b6d77e",
          "name": "GetAllUsers _WithoutToken",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/user",
            "method": "GET",
            "header": [],
            "body": {},
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "08f344ef-b2b9-ed8e-466d-20f0ddcc5303",
      "name": "4_RegisterProduct",
      "description": "",
      "item": [
        {
          "_postman_id": "c000e29c-1a6f-50a6-7a32-0643092d6a4f",
          "name": "RegisterProductUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"prdt\", text);\r",
                  "console.log(text);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstName\": \"Varun\",\r\n  \"lastName\": \"Singh\",\r\n  \"password\": \"123456\",\r\n  \"country\": \"India\",\r\n  \"name\": \"Product_1\",\r\n  \"email\": \"varunsingh{{prdt}}@gmail.com\",\r\n  \"area\": \"Noida\",\r\n  \"pin\": \"201301\",\r\n  \"sittingSpace\": \"500\",\r\n  \"sittingtype\": \"abc\",\r\n  \"category\": \"all\",\r\n  \"state\": \"UP\",\r\n  \"phone\": \"9643881430\",\r\n  \"offers\": [\r\n    {\r\n      \"offer\": \"asd\"\r\n    }\r\n  ],\r\n  \"starters\": [\r\n    {\r\n      \"starter\": \"xyz\",\r\n      \"starterRate\": 100\r\n    }\r\n  ],\r\n  \"maincourses\": [\r\n    {\r\n      \"mainCourse\": \"sdd\",\r\n      \"mainCourseRate\": 500\r\n    }\r\n  ],\r\n  \"desserts\": [\r\n    {\r\n      \"dessert\": \"vodka\",\r\n      \"dessertRate\": 100\r\n    }\r\n  ],\r\n  \"attraction\": [\r\n    {\r\n      \"attraction\": \"qweqw\",\r\n      \"attractionDate\": \"12092017\"\r\n    }\r\n  ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0d5145d5-7105-28ed-30b8-8bc74dd02c46",
          "name": "RegisterProductUser_WithoutFirstName",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Registration User without First name--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"User validation failed: firstname: Path `firstname` is required.\");",
                  "});",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"prdt\", text);\r",
                  "console.log(text);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"Singh\",\r\n  \"password\": \"123456\",\r\n  \"country\": \"India\",\r\n  \"name\": \"Product_1\",\r\n  \"email\": \"varunsingh{{prdt}}@gmail.com\",\r\n  \"area\": \"Noida\",\r\n  \"pin\": \"201301\",\r\n  \"sittingSpace\": \"500\",\r\n  \"sittingtype\": \"abc\",\r\n  \"category\": \"all\",\r\n  \"state\": \"UP\",\r\n  \"phone\": \"9643881430\",\r\n  \"offers\": [\r\n    {\r\n      \"offer\": \"asd\"\r\n    }\r\n  ],\r\n  \"starters\": [\r\n    {\r\n      \"starter\": \"xyz\",\r\n      \"starterRate\": 100\r\n    }\r\n  ],\r\n  \"maincourses\": [\r\n    {\r\n      \"mainCourse\": \"sdd\",\r\n      \"mainCourseRate\": 500\r\n    }\r\n  ],\r\n  \"desserts\": [\r\n    {\r\n      \"dessert\": \"vodka\",\r\n      \"dessertRate\": 100\r\n    }\r\n  ],\r\n  \"attraction\": [\r\n    {\r\n      \"attraction\": \"qweqw\",\r\n      \"attractionDate\": \"12092017\"\r\n    }\r\n  ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4af26fd5-3ba0-a1c1-022d-093656100370",
          "name": "RegisterProductUser_WithoutLastName",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Registration User without Last name--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"User validation failed: lastname: Path `lastname` is required.\");",
                  "});",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"prdt\", text);\r",
                  "console.log(text);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstName\": \"Varun\",\r\n  \"lastName\": \"\",\r\n  \"password\": \"123456\",\r\n  \"country\": \"India\",\r\n  \"name\": \"Product_1\",\r\n  \"email\": \"varunsingh{{prdt}}@gmail.com\",\r\n  \"area\": \"Noida\",\r\n  \"pin\": \"201301\",\r\n  \"sittingSpace\": \"500\",\r\n  \"sittingtype\": \"abc\",\r\n  \"category\": \"all\",\r\n  \"state\": \"UP\",\r\n  \"phone\": \"9643881430\",\r\n  \"offers\": [\r\n    {\r\n      \"offer\": \"asd\"\r\n    }\r\n  ],\r\n  \"starters\": [\r\n    {\r\n      \"starter\": \"xyz\",\r\n      \"starterRate\": 100\r\n    }\r\n  ],\r\n  \"maincourses\": [\r\n    {\r\n      \"mainCourse\": \"sdd\",\r\n      \"mainCourseRate\": 500\r\n    }\r\n  ],\r\n  \"desserts\": [\r\n    {\r\n      \"dessert\": \"vodka\",\r\n      \"dessertRate\": 100\r\n    }\r\n  ],\r\n  \"attraction\": [\r\n    {\r\n      \"attraction\": \"qweqw\",\r\n      \"attractionDate\": \"12092017\"\r\n    }\r\n  ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "44232857-97e6-a9bf-e4a1-20218aec2371",
          "name": "RegisterProductUser_WithoutEmailID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Registration User without Email Id--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"User validation failed: email: Path `email` is required.\");",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"prdt\", text);\r",
                  "console.log(text);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstName\": \"Varun\",\r\n  \"lastName\": \"Singh\",\r\n  \"password\": \"123456\",\r\n  \"country\": \"India\",\r\n  \"name\": \"Product_1\",\r\n  \"email\": \"\",\r\n  \"area\": \"Noida\",\r\n  \"pin\": \"201301\",\r\n  \"sittingSpace\": \"500\",\r\n  \"sittingtype\": \"abc\",\r\n  \"category\": \"all\",\r\n  \"state\": \"UP\",\r\n  \"phone\": \"9643881430\",\r\n  \"offers\": [\r\n    {\r\n      \"offer\": \"asd\"\r\n    }\r\n  ],\r\n  \"starters\": [\r\n    {\r\n      \"starter\": \"xyz\",\r\n      \"starterRate\": 100\r\n    }\r\n  ],\r\n  \"maincourses\": [\r\n    {\r\n      \"mainCourse\": \"sdd\",\r\n      \"mainCourseRate\": 500\r\n    }\r\n  ],\r\n  \"desserts\": [\r\n    {\r\n      \"dessert\": \"vodka\",\r\n      \"dessertRate\": 100\r\n    }\r\n  ],\r\n  \"attraction\": [\r\n    {\r\n      \"attraction\": \"qweqw\",\r\n      \"attractionDate\": \"12092017\"\r\n    }\r\n  ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8abebde8-68cf-9fac-2e2a-a8f4dbde51a0",
          "name": "RegisterProductUser_WithouttProductName",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Registration User without Product Name--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"User validation failed: email: Path `ProductName` is required.\");",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"prdt\", text);\r",
                  "console.log(text);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstName\": \"Varun\",\r\n  \"lastName\": \"Singh\",\r\n  \"password\": \"123456\",\r\n  \"country\": \"India\",\r\n  \"name\": \"\",\r\n  \"email\": \"varunsingh{{prdt}}@gmail.com\",\r\n  \"area\": \"Noida\",\r\n  \"pin\": \"201301\",\r\n  \"sittingSpace\": \"500\",\r\n  \"sittingtype\": \"abc\",\r\n  \"category\": \"all\",\r\n  \"state\": \"UP\",\r\n  \"phone\": \"9643881430\",\r\n  \"offers\": [\r\n    {\r\n      \"offer\": \"asd\"\r\n    }\r\n  ],\r\n  \"starters\": [\r\n    {\r\n      \"starter\": \"xyz\",\r\n      \"starterRate\": 100\r\n    }\r\n  ],\r\n  \"maincourses\": [\r\n    {\r\n      \"mainCourse\": \"sdd\",\r\n      \"mainCourseRate\": 500\r\n    }\r\n  ],\r\n  \"desserts\": [\r\n    {\r\n      \"dessert\": \"vodka\",\r\n      \"dessertRate\": 100\r\n    }\r\n  ],\r\n  \"attraction\": [\r\n    {\r\n      \"attraction\": \"qweqw\",\r\n      \"attractionDate\": \"12092017\"\r\n    }\r\n  ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a0a73c8e-d3d7-fee9-7a2d-7cd75c54524c",
          "name": "RegisterProductUser_WithoutPassword",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Registration User without Password-\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"User validation failed: email: Path `Password` is required.\");",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"prdt\", text);\r",
                  "console.log(text);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstName\": \"Varun\",\r\n  \"lastName\": \"Singh\",\r\n  \"password\": \"\",\r\n  \"country\": \"India\",\r\n  \"name\": \"Prod12\",\r\n  \"email\": \"varunsingh{{prdt}}@gmail.com\",\r\n  \"area\": \"Noida\",\r\n  \"pin\": \"201301\",\r\n  \"sittingSpace\": \"500\",\r\n  \"sittingtype\": \"abc\",\r\n  \"category\": \"all\",\r\n  \"state\": \"UP\",\r\n  \"phone\": \"9643881430\",\r\n  \"offers\": [\r\n    {\r\n      \"offer\": \"asd\"\r\n    }\r\n  ],\r\n  \"starters\": [\r\n    {\r\n      \"starter\": \"xyz\",\r\n      \"starterRate\": 100\r\n    }\r\n  ],\r\n  \"maincourses\": [\r\n    {\r\n      \"mainCourse\": \"sdd\",\r\n      \"mainCourseRate\": 500\r\n    }\r\n  ],\r\n  \"desserts\": [\r\n    {\r\n      \"dessert\": \"vodka\",\r\n      \"dessertRate\": 100\r\n    }\r\n  ],\r\n  \"attraction\": [\r\n    {\r\n      \"attraction\": \"qweqw\",\r\n      \"attractionDate\": \"12092017\"\r\n    }\r\n  ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8342fc9d-b03e-9ee5-4bd7-6aa8ff15f7f5",
          "name": "RegisterProductUser_WithoutMandatoryFields",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Registration User without Mandatory Fields--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"User validation failed: firstname: Path `firstname` is required., lastname: Path `lastname` is required., password: Path `password` is required., email: Path `email` is required., userid: Path `userid` is required.\");",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"prdt\", text);\r",
                  "console.log(text);\r",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"\",\r\n  \"password\": \"\",\r\n  \"country\": \"India\",\r\n  \"name\": \"\",\r\n  \"email\": \"\",\r\n  \"area\": \"Noida\",\r\n  \"pin\": \"201301\",\r\n  \"sittingSpace\": \"500\",\r\n  \"sittingtype\": \"abc\",\r\n  \"category\": \"all\",\r\n  \"state\": \"UP\",\r\n  \"phone\": \"9643881430\",\r\n  \"offers\": [\r\n    {\r\n      \"offer\": \"asd\"\r\n    }\r\n  ],\r\n  \"starters\": [\r\n    {\r\n      \"starter\": \"xyz\",\r\n      \"starterRate\": 100\r\n    }\r\n  ],\r\n  \"maincourses\": [\r\n    {\r\n      \"mainCourse\": \"sdd\",\r\n      \"mainCourseRate\": 500\r\n    }\r\n  ],\r\n  \"desserts\": [\r\n    {\r\n      \"dessert\": \"vodka\",\r\n      \"dessertRate\": 100\r\n    }\r\n  ],\r\n  \"attraction\": [\r\n    {\r\n      \"attraction\": \"qweqw\",\r\n      \"attractionDate\": \"12092017\"\r\n    }\r\n  ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "37d262ec-e66a-fe3a-b732-b9904e6f36a4",
      "name": "5_LoginProductUser",
      "description": "",
      "item": [
        {
          "_postman_id": "334017ba-246b-f4de-f45f-436090957a00",
          "name": "LoginFor_ProductUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var data = JSON.parse(responseBody);",
                  "var token_key=data.token",
                  "postman.setGlobalVariable(\"PToken_Key\", token_key);",
                  "console.log(token_key);",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"varunsinghmca@gmail.com\",\r\n  \"password\": \"123456\",\r\n  \"usertype\": \"product-owner\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        },
        {
          "_postman_id": "b662582a-462d-c2a0-8c4f-dad886d2020a",
          "name": "LoginProductUser_WithInvalidPassword",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Login User with invalid Password--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"Authentication failed. Passwords did not match.\");",
                  "});",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"varunsinghmca@gmail.com\",\r\n  \"password\": \"12345612\",\r\n  \"usertype\": \"product-owner\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        },
        {
          "_postman_id": "1cd99d2d-635b-a966-07f6-a5177c764f97",
          "name": "LoginProductUser_WithoutUserId",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Login User without Password--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"UserID data cannot be empty.\");",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"\",\r\n  \"password\": \"123456\",\r\n  \"usertype\": \"product-owner\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        },
        {
          "_postman_id": "9fcf281f-aa82-687c-ee92-060693cf4875",
          "name": "LoginProductUser_WithoutPassword",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Login User with without Password--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"password data cannot be empty.\");",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"varunsinghmca@gmail.com\",\r\n  \"password\": \"\",\r\n  \"usertype\": \"product-owner\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        },
        {
          "_postman_id": "fce6772f-8367-9e8a-7093-8ad46536b8d5",
          "name": "LoginProductUser_WithInvalidUserName",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Login User with with invalid UserName--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"Please enter correct UserName\");",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"nupurs009@gmail.com\",\r\n  \"password\": \"123456\",\r\n  \"usertype\": \"product-owner\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        },
        {
          "_postman_id": "dedf359c-2672-6ca9-50b5-f0a3c03e43ac",
          "name": "LoginProductUser_WithoutUserType",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Login User without UserType--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"Please enter UserType\");",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": {
              "raw": "http://192.168.129.143:5000/api/user/login",
              "protocol": "http",
              "auth": {},
              "host": [
                "192",
                "168",
                "129",
                "143"
              ],
              "port": "5000",
              "path": [
                "api",
                "user",
                "login"
              ],
              "query": [
                {
                  "description": "",
                  "equals": true,
                  "key": "UserID",
                  "value": "user_ids",
                  "disabled": true
                }
              ],
              "variable": []
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"userid\": \"varunsinghmca@gmail.com\",\r\n  \"password\": \"123456\",\r\n  \"usertype\": \"\"\r\n}"
            },
            "description": "This API is sue for login"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "895ca5e8-b84b-e99f-79cd-38e7e64f436e",
      "name": "6_GetProduct",
      "description": "",
      "item": [
        {
          "_postman_id": "67559378-ec58-f919-b111-8fbfa0981e4a",
          "name": "GetProduct_WithValidUserID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var data = JSON.parse(responseBody);",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "var data = JSON.parse(responseBody);",
                  "var Product=data.product._id",
                  "console.log(\"Product ID  is----\"+Product);",
                  "postman.setGlobalVariable(\"Prod\", Product);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api//product/varunsinghmca@gmail.com",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{PToken_Key}}",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ee099671-daa5-3a6c-e315-67ce51aa2a01",
          "name": "GetAllProducts",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api//product",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{PToken_Key}}",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f27aca57-1550-6ccb-47d0-d145f14ff069",
          "name": "GetProduct_WithInvalidUserID",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api//product/varuns1333@gmail.com",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{PToken_Key}}",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7ebecebd-acf7-43c2-8fa0-dc99b7ea867f",
          "name": "GetProduct_WithoutToken",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api//product/varunsinghmca@gmail.com",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyIkX18iOnsic3RyaWN0TW9kZSI6dHJ1ZSwic2VsZWN0ZWQiOnt9LCJnZXR0ZXJzIjp7fSwiX2lkIjoiNTliNzgxMTY1NjM1MDQxZTU4NTZhNjFhIiwid2FzUG9wdWxhdGVkIjpmYWxzZSwiYWN0aXZlUGF0aHMiOnsicGF0aHMiOnsiZW1haWwiOiJpbml0IiwicGhvbmUiOiJpbml0IiwidXNlcnR5cGUiOiJpbml0IiwicGFzc3dvcmQiOiJpbml0IiwidXNlcmlkIjoiaW5pdCIsImxhc3RuYW1lIjoiaW5pdCIsImZpcnN0bmFtZSI6ImluaXQiLCJkYXRlb2ZiaXJ0aCI6ImluaXQiLCJtYXJpdGFsc3RhdHVzIjoiaW5pdCIsImFubml2ZXJzYXJ5IjoiaW5pdCIsImNoaWxkcmVuIjoiaW5pdCIsImFkZHJlc3Nlcy5vZmZpY2Uub2FyZWEiOiJpbml0IiwiYWRkcmVzc2VzLm9mZmljZS5vY2l0eSI6ImluaXQiLCJhZGRyZXNzZXMub2ZmaWNlLm9zdGF0ZSI6ImluaXQiLCJhZGRyZXNzZXMub2ZmaWNlLm9jb3VudHJ5IjoiaW5pdCIsImFkZHJlc3Nlcy5vZmZpY2Uub3BpbiI6ImluaXQiLCJhZGRyZXNzZXMuaG9tZS5oYXJlYSI6ImluaXQiLCJhZGRyZXNzZXMuaG9tZS5oY2l0eSI6ImluaXQiLCJhZGRyZXNzZXMuaG9tZS5oc3RhdGUiOiJpbml0IiwiYWRkcmVzc2VzLmhvbWUuaGNvdW50cnkiOiJpbml0IiwiYWRkcmVzc2VzLmhvbWUuaHBpbiI6ImluaXQiLCJwcmVmZXJlbmNlcy5jdWlzaW5lcyI6ImluaXQiLCJwcmVmZXJlbmNlcy5hcmVhcyI6ImluaXQiLCJwcmVmZXJlbmNlcy5hbWJpZW5jZXMiOiJpbml0IiwiY3JlYXRpb25fZGF0ZSI6ImluaXQiLCJ1cGRhdGVkX2RhdGUiOiJpbml0IiwiaW1hZ2VVUkwiOiJpbml0IiwiX192IjoiaW5pdCIsIl9pZCI6ImluaXQifSwic3RhdGVzIjp7Imlnbm9yZSI6e30sImRlZmF1bHQiOnt9LCJpbml0Ijp7Il9fdiI6dHJ1ZSwidXNlcnR5cGUiOnRydWUsImRhdGVvZmJpcnRoIjp0cnVlLCJtYXJpdGFsc3RhdHVzIjp0cnVlLCJhbm5pdmVyc2FyeSI6dHJ1ZSwiY2hpbGRyZW4iOnRydWUsImFkZHJlc3Nlcy5vZmZpY2Uub2FyZWEiOnRydWUsImFkZHJlc3Nlcy5vZmZpY2Uub2NpdHkiOnRydWUsImFkZHJlc3Nlcy5vZmZpY2Uub3N0YXRlIjp0cnVlLCJhZGRyZXNzZXMub2ZmaWNlLm9jb3VudHJ5Ijp0cnVlLCJhZGRyZXNzZXMub2ZmaWNlLm9waW4iOnRydWUsImFkZHJlc3Nlcy5ob21lLmhhcmVhIjp0cnVlLCJhZGRyZXNzZXMuaG9tZS5oY2l0eSI6dHJ1ZSwiYWRkcmVzc2VzLmhvbWUuaHN0YXRlIjp0cnVlLCJhZGRyZXNzZXMuaG9tZS5oY291bnRyeSI6dHJ1ZSwiYWRkcmVzc2VzLmhvbWUuaHBpbiI6dHJ1ZSwicHJlZmVyZW5jZXMuY3Vpc2luZXMiOnRydWUsInByZWZlcmVuY2VzLmFyZWFzIjp0cnVlLCJwcmVmZXJlbmNlcy5hbWJpZW5jZXMiOnRydWUsImNyZWF0aW9uX2RhdGUiOnRydWUsInVwZGF0ZWRfZGF0ZSI6dHJ1ZSwiaW1hZ2VVUkwiOnRydWUsImZpcnN0bmFtZSI6dHJ1ZSwibGFzdG5hbWUiOnRydWUsInBhc3N3b3JkIjp0cnVlLCJlbWFpbCI6dHJ1ZSwicGhvbmUiOnRydWUsInVzZXJpZCI6dHJ1ZSwiX2lkIjp0cnVlfSwibW9kaWZ5Ijp7fSwicmVxdWlyZSI6e319LCJzdGF0ZU5hbWVzIjpbInJlcXVpcmUiLCJtb2RpZnkiLCJpbml0IiwiZGVmYXVsdCIsImlnbm9yZSJdfSwicGF0aHNUb1Njb3BlcyI6e30sImVtaXR0ZXIiOnsiZG9tYWluIjpudWxsLCJfZXZlbnRzIjp7InNhdmUiOltudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbF0sImlzTmV3IjpbbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGxdfSwiX2V2ZW50c0NvdW50IjoyLCJfbWF4TGlzdGVuZXJzIjowfX0sImlzTmV3IjpmYWxzZSwiX2RvYyI6eyJ1c2VydHlwZSI6InByb2R1Y3Qtb3duZXIiLCJkYXRlb2ZiaXJ0aCI6bnVsbCwibWFyaXRhbHN0YXR1cyI6bnVsbCwiYW5uaXZlcnNhcnkiOm51bGwsImNoaWxkcmVuIjpudWxsLCJhZGRyZXNzZXMiOnsib2ZmaWNlIjp7Im9hcmVhIjpudWxsLCJvY2l0eSI6bnVsbCwib3N0YXRlIjpudWxsLCJvY291bnRyeSI6bnVsbCwib3BpbiI6bnVsbH0sImhvbWUiOnsiaGFyZWEiOm51bGwsImhjaXR5IjpudWxsLCJoc3RhdGUiOm51bGwsImhjb3VudHJ5IjpudWxsLCJocGluIjpudWxsfX0sInByZWZlcmVuY2VzIjp7ImN1aXNpbmVzIjpbXSwiYXJlYXMiOltdLCJhbWJpZW5jZXMiOltdfSwiY3JlYXRpb25fZGF0ZSI6IjIwMTctMDktMTJUMDY6Mzk6MTguMzMzWiIsInVwZGF0ZWRfZGF0ZSI6bnVsbCwiaW1hZ2VVUkwiOm51bGwsIl9fdiI6MCwiZmlyc3RuYW1lIjoiVmFydW4iLCJsYXN0bmFtZSI6IlNpbmdoIiwicGFzc3dvcmQiOiIkMmEkMTAkWEt5Yk5DZWE4WHF6RGh0akNSSGNTZWRUMGY3dDVyb3I2MWdWY2tUU3NVZ1I5c2hINW9oWG0iLCJlbWFpbCI6InZhcnVuc2luZ2htY2FAZ21haWwuY29tIiwicGhvbmUiOiI5NjQzODgxNDMwIiwidXNlcmlkIjoidmFydW5zaW5naG1jYUBnbWFpbC5jb20iLCJfaWQiOiI1OWI3ODExNjU2MzUwNDFlNTg1NmE2MWEifSwiJGluaXQiOnRydWUsImlhdCI6MTUwNTE5ODcyNCwiZXhwIjoxNTA1Mjg4NzI0fQ.Q5c-XAemprh33UVRAvq8KU6QxEw-JmfXEHpA62jwN50",
                "description": "",
                "disabled": true
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "940de545-d489-d608-ec5c-fe24d41ea861",
          "name": "GetAllProducts _WithoutToken",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api//product",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyIkX18iOnsic3RyaWN0TW9kZSI6dHJ1ZSwic2VsZWN0ZWQiOnt9LCJnZXR0ZXJzIjp7fSwiX2lkIjoiNTliNzgxMTY1NjM1MDQxZTU4NTZhNjFhIiwid2FzUG9wdWxhdGVkIjpmYWxzZSwiYWN0aXZlUGF0aHMiOnsicGF0aHMiOnsiZW1haWwiOiJpbml0IiwicGhvbmUiOiJpbml0IiwidXNlcnR5cGUiOiJpbml0IiwicGFzc3dvcmQiOiJpbml0IiwidXNlcmlkIjoiaW5pdCIsImxhc3RuYW1lIjoiaW5pdCIsImZpcnN0bmFtZSI6ImluaXQiLCJkYXRlb2ZiaXJ0aCI6ImluaXQiLCJtYXJpdGFsc3RhdHVzIjoiaW5pdCIsImFubml2ZXJzYXJ5IjoiaW5pdCIsImNoaWxkcmVuIjoiaW5pdCIsImFkZHJlc3Nlcy5vZmZpY2Uub2FyZWEiOiJpbml0IiwiYWRkcmVzc2VzLm9mZmljZS5vY2l0eSI6ImluaXQiLCJhZGRyZXNzZXMub2ZmaWNlLm9zdGF0ZSI6ImluaXQiLCJhZGRyZXNzZXMub2ZmaWNlLm9jb3VudHJ5IjoiaW5pdCIsImFkZHJlc3Nlcy5vZmZpY2Uub3BpbiI6ImluaXQiLCJhZGRyZXNzZXMuaG9tZS5oYXJlYSI6ImluaXQiLCJhZGRyZXNzZXMuaG9tZS5oY2l0eSI6ImluaXQiLCJhZGRyZXNzZXMuaG9tZS5oc3RhdGUiOiJpbml0IiwiYWRkcmVzc2VzLmhvbWUuaGNvdW50cnkiOiJpbml0IiwiYWRkcmVzc2VzLmhvbWUuaHBpbiI6ImluaXQiLCJwcmVmZXJlbmNlcy5jdWlzaW5lcyI6ImluaXQiLCJwcmVmZXJlbmNlcy5hcmVhcyI6ImluaXQiLCJwcmVmZXJlbmNlcy5hbWJpZW5jZXMiOiJpbml0IiwiY3JlYXRpb25fZGF0ZSI6ImluaXQiLCJ1cGRhdGVkX2RhdGUiOiJpbml0IiwiaW1hZ2VVUkwiOiJpbml0IiwiX192IjoiaW5pdCIsIl9pZCI6ImluaXQifSwic3RhdGVzIjp7Imlnbm9yZSI6e30sImRlZmF1bHQiOnt9LCJpbml0Ijp7Il9fdiI6dHJ1ZSwidXNlcnR5cGUiOnRydWUsImRhdGVvZmJpcnRoIjp0cnVlLCJtYXJpdGFsc3RhdHVzIjp0cnVlLCJhbm5pdmVyc2FyeSI6dHJ1ZSwiY2hpbGRyZW4iOnRydWUsImFkZHJlc3Nlcy5vZmZpY2Uub2FyZWEiOnRydWUsImFkZHJlc3Nlcy5vZmZpY2Uub2NpdHkiOnRydWUsImFkZHJlc3Nlcy5vZmZpY2Uub3N0YXRlIjp0cnVlLCJhZGRyZXNzZXMub2ZmaWNlLm9jb3VudHJ5Ijp0cnVlLCJhZGRyZXNzZXMub2ZmaWNlLm9waW4iOnRydWUsImFkZHJlc3Nlcy5ob21lLmhhcmVhIjp0cnVlLCJhZGRyZXNzZXMuaG9tZS5oY2l0eSI6dHJ1ZSwiYWRkcmVzc2VzLmhvbWUuaHN0YXRlIjp0cnVlLCJhZGRyZXNzZXMuaG9tZS5oY291bnRyeSI6dHJ1ZSwiYWRkcmVzc2VzLmhvbWUuaHBpbiI6dHJ1ZSwicHJlZmVyZW5jZXMuY3Vpc2luZXMiOnRydWUsInByZWZlcmVuY2VzLmFyZWFzIjp0cnVlLCJwcmVmZXJlbmNlcy5hbWJpZW5jZXMiOnRydWUsImNyZWF0aW9uX2RhdGUiOnRydWUsInVwZGF0ZWRfZGF0ZSI6dHJ1ZSwiaW1hZ2VVUkwiOnRydWUsImZpcnN0bmFtZSI6dHJ1ZSwibGFzdG5hbWUiOnRydWUsInBhc3N3b3JkIjp0cnVlLCJlbWFpbCI6dHJ1ZSwicGhvbmUiOnRydWUsInVzZXJpZCI6dHJ1ZSwiX2lkIjp0cnVlfSwibW9kaWZ5Ijp7fSwicmVxdWlyZSI6e319LCJzdGF0ZU5hbWVzIjpbInJlcXVpcmUiLCJtb2RpZnkiLCJpbml0IiwiZGVmYXVsdCIsImlnbm9yZSJdfSwicGF0aHNUb1Njb3BlcyI6e30sImVtaXR0ZXIiOnsiZG9tYWluIjpudWxsLCJfZXZlbnRzIjp7InNhdmUiOltudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbF0sImlzTmV3IjpbbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGxdfSwiX2V2ZW50c0NvdW50IjoyLCJfbWF4TGlzdGVuZXJzIjowfX0sImlzTmV3IjpmYWxzZSwiX2RvYyI6eyJ1c2VydHlwZSI6InByb2R1Y3Qtb3duZXIiLCJkYXRlb2ZiaXJ0aCI6bnVsbCwibWFyaXRhbHN0YXR1cyI6bnVsbCwiYW5uaXZlcnNhcnkiOm51bGwsImNoaWxkcmVuIjpudWxsLCJhZGRyZXNzZXMiOnsib2ZmaWNlIjp7Im9hcmVhIjpudWxsLCJvY2l0eSI6bnVsbCwib3N0YXRlIjpudWxsLCJvY291bnRyeSI6bnVsbCwib3BpbiI6bnVsbH0sImhvbWUiOnsiaGFyZWEiOm51bGwsImhjaXR5IjpudWxsLCJoc3RhdGUiOm51bGwsImhjb3VudHJ5IjpudWxsLCJocGluIjpudWxsfX0sInByZWZlcmVuY2VzIjp7ImN1aXNpbmVzIjpbXSwiYXJlYXMiOltdLCJhbWJpZW5jZXMiOltdfSwiY3JlYXRpb25fZGF0ZSI6IjIwMTctMDktMTJUMDY6Mzk6MTguMzMzWiIsInVwZGF0ZWRfZGF0ZSI6bnVsbCwiaW1hZ2VVUkwiOm51bGwsIl9fdiI6MCwiZmlyc3RuYW1lIjoiVmFydW4iLCJsYXN0bmFtZSI6IlNpbmdoIiwicGFzc3dvcmQiOiIkMmEkMTAkWEt5Yk5DZWE4WHF6RGh0akNSSGNTZWRUMGY3dDVyb3I2MWdWY2tUU3NVZ1I5c2hINW9oWG0iLCJlbWFpbCI6InZhcnVuc2luZ2htY2FAZ21haWwuY29tIiwicGhvbmUiOiI5NjQzODgxNDMwIiwidXNlcmlkIjoidmFydW5zaW5naG1jYUBnbWFpbC5jb20iLCJfaWQiOiI1OWI3ODExNjU2MzUwNDFlNTg1NmE2MWEifSwiJGluaXQiOnRydWUsImlhdCI6MTUwNTE5ODcyNCwiZXhwIjoxNTA1Mjg4NzI0fQ.Q5c-XAemprh33UVRAvq8KU6QxEw-JmfXEHpA62jwN50",
                "description": "",
                "disabled": true
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "e7d70ff5-a584-3941-b6b9-ca5c718135b1",
      "name": "7_Register Category",
      "description": "",
      "item": [
        {
          "_postman_id": "e5d25d14-24ff-3500-3aa8-e61c19e773c4",
          "name": "Register Category",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var data = JSON.parse(responseBody);",
                  "var cat=data.category.category",
                  "console.log(\"Category  is----\"+cat);",
                  "postman.setGlobalVariable(\"category\", cat);"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var text=\"ab\";\r",
                  "var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
                  "    for( var i=0; i <4; i++ )\r",
                  "        text += charset.charAt(Math.floor(Math.random() * charset.length));    \r",
                  "postman.setEnvironmentVariable(\"Cat\", text);\r",
                  "console.log(text);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/category",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"category\": \"{{Cat}}\",\r\n  \"categorydescription\": \"Touch Screen1\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7d360fa5-3dc5-66fe-268f-d435dc60cd09",
          "name": "Register Category with duplicate category",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api//category",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"category\": \"Mobile1\",\r\n  \"categorydescription\": \"Touch Screen1\"\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "eeba4b32-52a8-f995-401d-23ba6a2c7aff",
      "name": "8_GetCategory",
      "description": "",
      "item": [
        {
          "_postman_id": "63c26810-78d4-de59-b5e3-8b1cef2e29ce",
          "name": "GetCategory without Authorization",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/category",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": "",
                "disabled": true
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b7638e63-67be-80b7-e974-a77488df5793",
          "name": "GetCategory with valid Authorization",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/category",
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "faa27343-fd60-1fbe-b3d3-19289d9bdc17",
      "name": "9_RegisterMenu",
      "description": "",
      "item": [
        {
          "_postman_id": "1ec329b7-f7d1-425f-af0b-1b19512d1a3e",
          "name": "RegisterMenu with Valid Input",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api//product/{{Prod}}/menu",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"desserts\": {\r\n    \"dessert\": \"IceCream\",\r\n    \"dessertRate\": 500\r\n  },\r\n  \"maincourses\": {\r\n    \"mainCourse\": \"Paneer\",\r\n    \"mainCourseRate\": 5000\r\n  },\r\n  \"starters\": {\r\n    \"starter\": \"Tikka\",\r\n    \"starterRate\": 500\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "1f7ad75c-2dad-5385-d12a-58a5e81ebe5b",
          "name": "RegisterMenu without Authorization",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/menu",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"desserts\": {\r\n    \"dessert\": \"IceCream\",\r\n    \"dessertRate\": 500\r\n  },\r\n  \"maincourses\": {\r\n    \"mainCourse\": \"Paneer\",\r\n    \"mainCourseRate\": 5000\r\n  },\r\n  \"starters\": {\r\n    \"starter\": \"Tikka\",\r\n    \"starterRate\": 500\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f9c85474-0ea5-a93a-44bd-10e9050d920b",
          "name": "RegisterMenu with Invalid Currency",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Menu validation failed--\"+jsonData._message, function () {",
                  "    pm.expect(jsonData._message).to.eql(\"Menu validation failed\");",
                  "});",
                  "",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api//product/{{Prod}}/menu",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"desserts\": {\r\n    \"dessert\": \"IceCream\",\r\n    \"dessertRate\": \"Hello\"\r\n  },\r\n  \"maincourses\": {\r\n    \"mainCourse\": \"Paneer\",\r\n    \"mainCourseRate\": 5000\r\n  },\r\n  \"starters\": {\r\n    \"starter\": \"Tikka\",\r\n    \"starterRate\": 500\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "1effcdd4-4206-bef0-9b5c-65461f6bdb53",
      "name": "10_GetMenuByProductID",
      "description": "",
      "item": [
        {
          "_postman_id": "5fb7da11-12e1-19e7-9ae3-d1d970af6bde",
          "name": "GetMenuByProductID with Valid Authorization",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/menu",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "04d489e3-167a-f3e8-f9e5-1485f9cb92ff",
          "name": "GetMenuByProductID without Authorization",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/menu",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": "",
                "disabled": true
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "5e6fdd48-8893-efb9-5fea-6e389351c7d7",
      "name": "11_UpdateMenu",
      "description": "",
      "item": [
        {
          "_postman_id": "6668092c-7db6-43a1-6c98-d4bdf6191619",
          "name": "UpdateMenu with valid parameter",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/menu",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"desserts\": {\r\n    \"dessert\": \"IceCream\",\r\n    \"dessertRate\": 800\r\n  },\r\n  \"maincourses\": {\r\n    \"mainCourse\": \"Paneer\",\r\n    \"mainCourseRate\": 5000\r\n  },\r\n  \"starters\": {\r\n    \"starter\": \"Tikki\",\r\n    \"starterRate\": 500\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "84931ff9-afb4-75ed-8db5-9e21900a58ed",
      "name": "12_RegisterAttraction",
      "description": "",
      "item": [
        {
          "_postman_id": "960584c3-ecc1-e77a-293e-bacb32b29b8b",
          "name": "Register Attraction with Authorization",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/attraction",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Attractions\": {\r\n    \"attraction\": \"Buy 1 Get 1 free\",\r\n    \"attractionDate\": \"12092017\"\r\n  },\r\n  \"upcomingEvents\": {\r\n    \"upcomingEvent\": \"Navratri Special\",\r\n    \"eventdate\": \"22092017\"\r\n  },\r\n  \"updated_date\": \"22092017\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "21321aa6-39b0-bfcc-4a50-f0b45a35133d",
          "name": "Register Attraction with invalid inputs",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/attraction",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Attractions\": {\r\n    \"attraction\": \"Buy 1 Get 1 free\",\r\n    \"attractionDate\": \"99/5/52017\"\r\n  },\r\n  \"upcomingEvents\": {\r\n    \"upcomingEvent\": \"Navratri Special\",\r\n    \"eventdate\": \"22092017\"\r\n  },\r\n  \"updated_date\": \"22092017\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "18227158-bcc3-bc14-7c58-e15dd5ccf3fa",
          "name": "Register Attraction without Authorization",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/attraction",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Attractions\": {\r\n    \"attraction\": \"Buy 1 Get 1 free\",\r\n    \"attractionDate\": \"12092017\"\r\n  },\r\n  \"upcomingEvents\": {\r\n    \"upcomingEvent\": \"Navratri Special\",\r\n    \"eventdate\": \"22092017\"\r\n  },\r\n  \"updated_date\": \"22092017\"\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "a49126ab-ebec-9fac-7452-a61cd7817580",
      "name": "13_Update Attraction",
      "description": "",
      "item": [
        {
          "_postman_id": "18e07937-4851-0050-136b-79fdc2b9129f",
          "name": "Update with Valid input",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Content-Type is present\", function () {",
                  "    pm.response.to.have.header(\"Content-Type\");",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Attraction updated successfully.--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"Attraction updated successfully.\");",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/attraction",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Attractions\": {\r\n    \"attraction\": \"Buy 2 Get 1 free\",\r\n    \"attractionDate\": \"12092017\"\r\n  },\r\n  \"upcomingEvents\": {\r\n    \"upcomingEvent\": \"Navratri Special Hurray\",\r\n    \"eventdate\": \"22092017\"\r\n  },\r\n  \"updated_date\": \"22092017\"\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7d3e1c38-e520-8263-ccbf-e91bbd8c119b",
          "name": "Update with Invalid input ",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Unable to update attraction data--\"+jsonData.message, function () {",
                  "    pm.expect(jsonData.message).to.eql(\"Unable to update attraction data\");",
                  "});",
                  "",
                  "",
                  "pm.test(\"Response time is less than 200ms\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/attraction",
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"Attractions\": {\r\n    \"attraction\": \"Buy 2 Get 1 free\",\r\n    \"attractionDate\": \"1209/2017\"\r\n  },\r\n  \"upcomingEvents\": {\r\n    \"upcomingEvent\": \"Navratri Special Hurray\",\r\n    \"eventdate\": \"22092017\"\r\n  },\r\n  \"updated_date\": \"22092017\"\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "22ff0890-e119-76ee-e4c4-99207a8c70f9",
      "name": "14_Get attraction by product Id",
      "description": "",
      "item": [
        {
          "_postman_id": "4873bc62-087c-4036-081d-cfbf54eb569c",
          "name": "Get Attraction by Valid ProductID  & Authorization",
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/attraction",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7514e5c3-0627-a0b7-f2fc-8bedc29f8ce6",
          "name": "Get Attraction by Valid ProductID  wihout Authorization",
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/attraction",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": "",
                "disabled": true
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "5dde450f-2fc2-6b68-b7d9-45066da2156e",
      "name": "15_Register Product Offer",
      "description": "",
      "item": [
        {
          "_postman_id": "1b241071-51e0-b4b9-dfe1-d1913bb08c6f",
          "name": "Register Product Offer with valid inputs",
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/productOffer",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"offers\": {\r\n    \"offer\": \"Summar Bononza\",\r\n    \"updated_date\": \"20170101\"\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "cc3cd2ed-31b2-8d6a-40c8-ec11932930fe",
          "name": "Register Product Offer without Authorization",
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/productOffer",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"offers\": {\r\n    \"offer\": \"Summar Bononza\",\r\n    \"updated_date\": \"20170101\"\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "80c6188a-1847-584b-c6c8-70edb97994da",
      "name": "16_Update Product Offer",
      "description": "",
      "item": [
        {
          "_postman_id": "7a25e7d5-7be9-85bd-1f62-25edb4c4da9f",
          "name": "Update Product Offer",
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/productOffer",
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"offers\": {\r\n    \"offer\": \"Winter Sale\"\r\n  }\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "2ec27b6b-fe85-6861-4983-884e276108fd",
      "name": "17_Get product offer by product id",
      "description": "",
      "item": [
        {
          "_postman_id": "83cbd669-30c1-edb5-fa10-ad62f694a2fd",
          "name": "getProductOfferByProductId",
          "request": {
            "url": "http://192.168.129.143:5000/api/product/{{Prod}}/productOffer",
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "Authorization",
                "value": "{{Token_Key}}",
                "description": ""
              }
            ],
            "body": {},
            "description": ""
          },
          "response": []
        }
      ]
    }
  ]
}